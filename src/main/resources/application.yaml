spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: user
    password: password

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  data:
    redis:
      ttl: 86400
      comments_size: 3
      port: 6379
      host: localhost
      channels:
        calculations_channel:
          name: calculations_channel
        user_ban_channel:
          name: user_ban_channel
        comment_events_channel:
          name: comment_events_channel
        like_events_channel:
          name: like_events_channel

  kafka:
    bootstrap-servers: "localhost:9092"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group: unicorn
      auto-offset-reset: earliest
    channels:
      post_event_channel:
        name: post_event_channel
      like_event_channel:
        name: like_event_channel
      unlike_event_channel:
        name: unlike_events_channel
      post_view_event_channel:
        name: post_view_event_channel
      comment_event_channel:
        name: comment_event_channel

server:
  port: 8081

logging:
  level:
    root: info

post:
  publisher:
    scheduler:
      cron: "0 0/1 * 1/1 * ?" # every minute
  ad-remover:
    scheduler:
      cron: "0 0/1 * 1/1 * ?" # every minute
  moderation:
    scheduler:
      cron: "0 0 0 * * ?" # every day at midnight
    batchSize: 100

comment:
  moderation:
    scheduler:
      cron: "0 0 0 * * ?" # every day at midnight
    batchSize: 100
  ban:
    scheduler:
      cron: "0 0 * * * ?" # every hour
    numberOfCommentsToBan: 5

thread-pool:
  maxThreadPoolSize: 10
  coreThreadPoolSize: 5
  queueCapacity: 100

post-service:
  post-distribution:
    batch-size: 2000
    thread-count: 8

correcter:
  scheduler:
    cron: "0 0 0 * * ?" # Every day at midnight

user-service:
  host: localhost
  port: 8080
project-service:
  host: localhost
  port: 8082
payment-service:
  host: localhost
  port: 9080

ai:
  api:
    key: 7b59c5412dmsha6284a44d021ab9p14f51cjsn2e93aa88df77
    host: "textgears-textgears-v1.p.rapidapi.com"
    path: "/grammar"

services:
  s3:
    endpoint: <http://localhost:9000>
    accessKey: user
    secretKey: password
    bucketName: corpbucket
aws:
  accessKey: user
  secretKey: password
  region: http://127.0.0.1:9000/
  bucket-name: user-bucket